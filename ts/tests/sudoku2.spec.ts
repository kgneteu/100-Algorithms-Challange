import {sudoku2} from '../src/sudoku2';

describe(sudoku2.name, () => {
    it('Test 1', () => {
        const data = [
            [".",".",".","1","4",".",".","2","."],
            [".",".","6",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".","1",".",".",".",".",".","."],
            [".","6","7",".",".",".",".",".","9"],
            [".",".",".",".",".",".","8","1","."],
            [".","3",".",".",".",".",".",".","6"],
            [".",".",".",".",".","7",".",".","."],
            [".",".",".","5",".",".",".","7","."]]
        const response = sudoku2(data);
        expect(response).toBe(true);
    });
    it('Test 2', () => {
        const data = [
            [".",".",".",".","2",".",".","9","."],
            [".",".",".",".","6",".",".",".","."],
            ["7","1",".",".","7","5",".",".","."],
            [".","7",".",".",".",".",".",".","."],
            [".",".",".",".","8","3",".",".","."],
            [".",".","8",".",".","7",".","6","."],
            [".",".",".",".",".","2",".",".","."],
            [".","1",".","2",".",".",".",".","."],
            [".","2",".",".","3",".",".",".","."]]
        const response = sudoku2(data);
        expect(response).toBe(false);
    });
    it('Test 3', () => {
        const data = [
            [".",".","4",".",".",".","6","3","."],
            [".",".",".",".",".",".",".",".","."],
            ["5",".",".",".",".",".",".","9","."],
            [".",".",".","5","6",".",".",".","."],
            ["4",".","3",".",".",".",".",".","1"],
            [".",".",".","7",".",".",".",".","."],
            [".",".",".","5",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","."]]
        const response = sudoku2(data);
        expect(response).toBe(false);
    });
    it('Test 4', () => {
        const data = [
            [".",".",".",".",".",".",".",".","2"],
            [".",".",".",".",".",".","6",".","."],
            [".",".","1","4",".",".","8",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".",".","3",".",".",".","."],
            ["5",".","8","6",".",".",".",".","."],
            [".","9",".",".",".",".","4",".","."],
            [".",".",".",".","5",".",".",".","."]]
        const response = sudoku2(data);
        expect(response).toBe(true);
    });
    it('Test 5', () => {
        const data = [
            [".","9",".",".","4",".",".",".","."],
            ["1",".",".",".",".",".","6",".","."],
            [".",".","3",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".","7",".",".",".",".","."],
            ["3",".",".",".","5",".",".",".","."],
            [".",".","7",".",".","4",".",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".",".","7",".",".",".","."]]
        const response = sudoku2(data);
        expect(response).toBe(true);
    });
    it('Test 6', () => {
        const data = [
            ["7",".",".",".","4",".",".",".","."],
            [".",".",".","8","6","5",".",".","."],
            [".","1",".","2",".",".",".",".","."],
            [".",".",".",".",".","9",".",".","."],
            [".",".",".",".","5",".","5",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".","2",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","."]]
        const response = sudoku2(data);
        expect(response).toBe(false);
    });
    it('Test 7', () => {
        const data = [
            [".","4",".",".",".",".",".",".","."],
            [".",".","4",".",".",".",".",".","."],
            [".",".",".","1",".",".","7",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".","3",".",".",".","6","."],
            [".",".",".",".",".","6",".","9","."],
            [".",".",".",".","1",".",".",".","."],
            [".",".",".",".",".",".","2",".","."],
            [".",".",".","8",".",".",".",".","."]]
        const response = sudoku2(data);
        expect(response).toBe(false);
    });
    it('Test 8', () => {
        const data = [
            [".",".","5",".",".",".",".",".","."],
            [".",".",".","8",".",".",".","3","."],
            [".","5",".",".","2",".",".",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","9"],
            [".",".",".",".",".",".","4",".","."],
            [".",".",".",".",".",".",".",".","7"],
            [".","1",".",".",".",".",".",".","."],
            ["2","4",".",".",".",".","9",".","."]]
        const response = sudoku2(data);
        expect(response).toBe(false);
    });
    it('Test 9', () => {
        const data = [
            [".","4",".",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".","9",".",".",".",".",".",".","1"],
            ["8",".",".",".",".",".",".",".","."],
            [".","9","9","3","5","7",".",".","."],
            [".",".",".",".",".",".",".","4","."],
            [".",".",".","8",".",".",".",".","."],
            [".","1",".",".",".",".","4",".","9"],
            [".",".",".","5",".","4",".",".","."]]
        const response = sudoku2(data);
        expect(response).toBe(false);
    });
    it('Test 10', () => {
        const data = [
            [".",".",".","2",".",".","6",".","."],
            [".",".",".","1",".",".",".",".","."],
            [".",".",".",".",".",".",".",".","."],
            [".",".",".","5",".","1",".",".","8"],
            [".","3",".",".",".",".",".",".","."],
            [".",".",".","9",".",".",".",".","3"],
            ["4",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".","3","8","."],
            [".",".",".",".",".",".",".",".","4"]]
        const response = sudoku2(data);
        expect(response).toBe(true);
    });

});
