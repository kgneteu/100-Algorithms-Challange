import {sudoku} from '../src/sudoku';

describe(sudoku.name, () => {
    it('Test 1', () => {
        const data = [
            [1, 3, 2, 5, 4, 6, 9, 8, 7],
            [4, 6, 5, 8, 7, 9, 3, 2, 1],
            [7, 9, 8, 2, 1, 3, 6, 5, 4],
            [9, 2, 1, 4, 3, 5, 8, 7, 6],
            [3, 5, 4, 7, 6, 8, 2, 1, 9],
            [6, 8, 7, 1, 9, 2, 5, 4, 3],
            [5, 7, 6, 9, 8, 1, 4, 3, 2],
            [2, 4, 3, 6, 5, 7, 1, 9, 8],
            [8, 1, 9, 3, 2, 4, 7, 6, 5]];
        const response = sudoku(data);
        expect(response).toEqual(true);
    });
    it('Test 2', () => {
        const data = [
            [1, 3, 2, 5, 4, 6, 9, 2, 7],
            [4, 6, 5, 8, 7, 9, 3, 8, 1],
            [7, 9, 8, 2, 1, 3, 6, 5, 4],
            [9, 2, 1, 4, 3, 5, 8, 7, 6],
            [3, 5, 4, 7, 6, 8, 2, 1, 9],
            [6, 8, 7, 1, 9, 2, 5, 4, 3],
            [5, 7, 6, 9, 8, 1, 4, 3, 2],
            [2, 4, 3, 6, 5, 7, 1, 9, 8],
            [8, 1, 9, 3, 2, 4, 7, 6, 5]]
        const response = sudoku(data);
        expect(response).toEqual(false);
    });
    it('Test 3', () => {
        const data = [
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9]]
        const response = sudoku(data);
        expect(response).toEqual(false);
    });
    it('Test 4', () => {
        const data = [
            [1, 3, 4, 2, 5, 6, 9, 8, 7],
            [4, 6, 8, 5, 7, 9, 3, 2, 1],
            [7, 9, 2, 8, 1, 3, 6, 5, 4],
            [9, 2, 3, 1, 4, 5, 8, 7, 6],
            [3, 5, 7, 4, 6, 8, 2, 1, 9],
            [6, 8, 1, 7, 9, 2, 5, 4, 3],
            [5, 7, 6, 9, 8, 1, 4, 3, 2],
            [2, 4, 5, 6, 3, 7, 1, 9, 8],
            [8, 1, 9, 3, 2, 4, 7, 6, 5]]
        const response = sudoku(data);
        expect(response).toEqual(false);
    });
    it('Test 5', () => {
        const data = [
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [4, 6, 5, 8, 7, 9, 3, 2, 1],
            [7, 9, 8, 2, 1, 3, 6, 5, 4],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [4, 6, 5, 8, 7, 9, 3, 2, 1],
            [7, 9, 8, 2, 1, 3, 6, 5, 4],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [4, 6, 5, 8, 7, 9, 3, 2, 1],
            [7, 9, 8, 2, 1, 3, 6, 5, 4]]
        const response = sudoku(data);
        expect(response).toEqual(false);
    });
    it('Test 6', () => {
        const data = [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 9, 6, 1, 4, 2, 3],
            [4, 2, 6, 8, 5, 3, 7, 9, 1],
            [7, 1, 3, 7, 2, 4, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]]
        const response = sudoku(data);
        expect(response).toEqual(false);
    });
    it('Test 7', () => {
        const data = [
            [5, 5, 5, 5, 5, 5, 5, 5, 5],
            [5, 5, 5, 5, 5, 5, 5, 5, 5],
            [5, 5, 5, 5, 5, 5, 5, 5, 5],
            [5, 5, 5, 5, 5, 5, 5, 5, 5],
            [5, 5, 5, 5, 5, 5, 5, 5, 5],
            [5, 5, 5, 5, 5, 5, 5, 5, 5],
            [5, 5, 5, 5, 5, 5, 5, 5, 5],
            [5, 5, 5, 5, 5, 5, 5, 5, 5],
            [5, 5, 5, 5, 5, 5, 5, 5, 5]]
        const response = sudoku(data);
        expect(response).toEqual(false);
    });
    it('Test 8', () => {
        const data = [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 3, 9, 5, 3, 4, 8],
            [1, 9, 8, 1, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 6, 1, 4, 2, 3],
            [4, 2, 6, 8, 5, 3, 7, 9, 1],
            [7, 1, 3, 9, 2, 4, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]]
        const response = sudoku(data);
        expect(response).toEqual(false);
    });
    it('Test 9', () => {
        const data = [
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [4, 5, 6, 7, 8, 9, 1, 2, 3],
            [7, 8, 9, 1, 2, 3, 4, 5, 6],
            [2, 3, 4, 5, 6, 7, 8, 9, 1],
            [3, 4, 5, 6, 7, 8, 9, 1, 2],
            [5, 6, 7, 8, 9, 1, 2, 3, 4],
            [6, 7, 8, 9, 1, 2, 3, 4, 5],
            [8, 9, 1, 2, 3, 4, 5, 6, 7],
            [9, 1, 2, 3, 4, 5, 6, 7, 8]]
        const response = sudoku(data);
        expect(response).toEqual(false);
    });
});
